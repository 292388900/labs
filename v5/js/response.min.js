


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>response.js/response.min.js at master Â· pandoraui/response.js</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="https://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <meta property="og:image" content="https://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png">
    <meta name="hostname" content="github-fe127-cp1-prd.iad.github.net">
    <meta name="ruby" content="ruby 1.9.3p194-tcs-github-tcmalloc (e1c0c3f392) [x86_64-linux]">
    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />
    


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="B4A93352:6DAA:66CDCC5:52AFF400" name="octolytics-dimension-request_id" /><meta content="3109576" name="octolytics-actor-id" /><meta content="cloudAi" name="octolytics-actor-login" /><meta content="894e1f37b146b74070d62cea2facb639a80d0a14deec9208e7856804aceb3e12" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="R219kFEO68qC3ZbF62OnWxgM8NonDUacNNhuVHl5ALM=" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-03f90ea33af27d8efd026ad0c6fa2e77ac339e39.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-113520fd4ebb74e106043ae23735a6b44043d348.css" media="all" rel="stylesheet" type="text/css" />
    

    

      <script src="https://github.global.ssl.fastly.net/assets/frameworks-1844a1411761b49806b833b36f4f340a4b4b17bd.js" type="text/javascript"></script>
      <script src="https://github.global.ssl.fastly.net/assets/github-142714ce3293528ebf737967d22fe9ece8e545eb.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="4adad49a5c3a10ba97e81e8674c5ce38">

        <link data-pjax-transient rel='permalink' href='/pandoraui/response.js/blob/8d5af82408c223bdb76980c7be8cf88d5732cc9d/response.min.js'>
  <meta property="og:title" content="response.js"/>
  <meta property="og:type" content="githubog:gitrepository"/>
  <meta property="og:url" content="https://github.com/pandoraui/response.js"/>
  <meta property="og:image" content="https://github.global.ssl.fastly.net/images/gravatars/gravatar-user-420.png"/>
  <meta property="og:site_name" content="GitHub"/>
  <meta property="og:description" content="response.js - Responsive design toolkit for jQuery"/>

  <meta name="description" content="response.js - Responsive design toolkit for jQuery" />

  <meta content="4190952" name="octolytics-dimension-user_id" /><meta content="pandoraui" name="octolytics-dimension-user_login" /><meta content="15247277" name="octolytics-dimension-repository_id" /><meta content="pandoraui/response.js" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="true" name="octolytics-dimension-repository_is_fork" /><meta content="2447530" name="octolytics-dimension-repository_parent_id" /><meta content="ryanve/response.js" name="octolytics-dimension-repository_parent_nwo" /><meta content="2447530" name="octolytics-dimension-repository_network_root_id" /><meta content="ryanve/response.js" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/pandoraui/response.js/commits/master.atom" rel="alternate" title="Recent Commits to response.js:master" type="application/atom+xml" />

  </head>


  <body class="logged_in  env-production windows vis-public fork page-blob">
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/">
  <span class="mega-octicon octicon-mark-github"></span>
</a>

    


      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="cloudAi"
      data-repo="pandoraui/response.js"
      data-branch="master"
      data-sha="72dfc45320b2a9d37ef13eaa7532b7858b69bd89"
  >

    <input type="hidden" name="nwo" value="pandoraui/response.js" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="octicon help tooltipped downwards" title="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    


  <ul id="user-links">
    <li>
      <a href="/cloudAi" class="name">
        <img height="20" src="https://2.gravatar.com/avatar/4daa1f32195cf761306577cb3c09b3f8?d=https%3A%2F%2Fidenticons.github.com%2F2f766f4dea5b7a03ffeba180f8744398.png&amp;r=x&amp;s=140" width="20" /> cloudAi
      </a>
    </li>

      <li>
        <a href="/new" id="new_repo" class="tooltipped downwards" title="Create a new repo" aria-label="Create a new repo">
          <span class="octicon octicon-repo-create"></span>
        </a>
      </li>

      <li>
        <a href="/settings/profile" id="account_settings"
          class="tooltipped downwards"
          aria-label="Account settings "
          title="Account settings ">
          <span class="octicon octicon-tools"></span>
        </a>
      </li>
      <li>
        <a class="tooltipped downwards" href="/logout" data-method="post" id="logout" title="Sign out" aria-label="Sign out">
          <span class="octicon octicon-log-out"></span>
        </a>
      </li>

  </ul>

<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo-create"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>

    <li class="section-title">
      <span title="pandoraui">This organization</span>
    </li>
    <li>
      <a href="/organizations/pandoraui/teams/new"><span class="octicon octicon-jersey"></span> New team</a>
    </li>
    <li>
      <a href="/organizations/pandoraui/repositories/new"><span class="octicon octicon-repo-create"></span> New repository</a>
    </li>


    <li class="section-title">
      <span title="pandoraui/response.js">This repository</span>
    </li>
      <li>
        <a href="/pandoraui/response.js/settings/collaboration"><span class="octicon octicon-person-add"></span> New collaborator</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

      




          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="R219kFEO68qC3ZbF62OnWxgM8NonDUacNNhuVHl5ALM=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="15247277" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/pandoraui/response.js/watchers">
        3
      </a>
      <span class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0">
        <span class="js-select-button">
          <span class="octicon octicon-eye-watch"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for conversations in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-watch"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
  

  <div class="js-toggler-container js-social-container starring-container ">
    <a href="/pandoraui/response.js/unstar"
      class="minibutton with-count js-toggler-target star-button starred upwards"
      title="Unstar this repository" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star-delete"></span><span class="text">Unstar</span>
    </a>

    <a href="/pandoraui/response.js/star"
      class="minibutton with-count js-toggler-target star-button unstarred upwards"
      title="Star this repository" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star"></span><span class="text">Star</span>
    </a>

      <a class="social-count js-social-count" href="/pandoraui/response.js/stargazers">
        0
      </a>
  </div>

  </li>


        <li>
          <a href="/pandoraui/response.js/fork" class="minibutton with-count js-toggler-target fork-button lighter upwards" title="Fork this repo" rel="facebox nofollow">
            <span class="octicon octicon-git-branch-create"></span><span class="text">Fork</span>
          </a>
          <a href="/pandoraui/response.js/network" class="social-count">70</a>
        </li>


</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo-forked"></span>
          <span class="author">
            <a href="/pandoraui" class="url fn" itemprop="url" rel="author"><span itemprop="title">pandoraui</span></a>
          </span>
          <span class="repohead-name-divider">/</span>
          <strong><a href="/pandoraui/response.js" class="js-current-repository js-repo-home-link">response.js</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

            <span class="fork-flag">
              <span class="text">forked from <a href="/ryanve/response.js">ryanve/response.js</a></span>
            </span>
        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      

      <div class="repository-with-sidebar repo-container  ">

        <div class="repository-sidebar">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped leftwards" title="Code">
        <a href="/pandoraui/response.js" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /pandoraui/response.js">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


      <li class="tooltipped leftwards" title="Pull Requests">
        <a href="/pandoraui/response.js/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /pandoraui/response.js/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>0</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped leftwards" title="Wiki">
          <a href="/pandoraui/response.js/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_wiki /pandoraui/response.js/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped leftwards" title="Pulse">
        <a href="/pandoraui/response.js/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /pandoraui/response.js/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Graphs">
        <a href="/pandoraui/response.js/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /pandoraui/response.js/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Network">
        <a href="/pandoraui/response.js/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /pandoraui/response.js/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


      <div class="sunken-menu-separator"></div>
      <ul class="sunken-menu-group">
        <li class="tooltipped leftwards" title="Settings">
          <a href="/pandoraui/response.js/settings"
            class="sunken-menu-item" data-pjax aria-label="Settings">
            <span class="octicon octicon-tools"></span> <span class="full-word">Settings</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </a>
        </li>
      </ul>
  </div>
</div>

            <div class="only-with-full-nav">
              

  

<div class="clone-url "
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=push">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/pandoraui/response.js.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/pandoraui/response.js.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url open"
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=push">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="git@github.com:pandoraui/response.js.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="git@github.com:pandoraui/response.js.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=push">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/pandoraui/response.js" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/pandoraui/response.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="octicon help tooltipped upwards" title="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>


  <a href="github-windows://openRepo/https://github.com/pandoraui/response.js" class="minibutton sidebar-button">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

              <a href="/pandoraui/response.js/archive/master.zip"
                 class="minibutton sidebar-button"
                 title="Download this repository as a zip file"
                 rel="nofollow">
                <span class="octicon octicon-cloud-download"></span>
                Download ZIP
              </a>
            </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:2d01da1154d3da22d8855ebcb7b89475 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/pandoraui/response.js/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Find or create a branchâ¦" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Find or create a branchâ¦">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/blob/master/response.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <form accept-charset="UTF-8" action="/pandoraui/response.js/branches" class="js-create-branch select-menu-item select-menu-new-item-form js-navigation-item js-new-item-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="R219kFEO68qC3ZbF62OnWxgM8NonDUacNNhuVHl5ALM=" /></div>
            <span class="octicon octicon-git-branch-create select-menu-item-icon"></span>
            <div class="select-menu-item-text">
              <h4>Create branch: <span class="js-new-item-name"></span></h4>
              <span class="description">from âmasterâ</span>
            </div>
            <input type="hidden" name="name" id="name" class="js-new-item-value">
            <input type="hidden" name="branch" id="branch" value="master" />
            <input type="hidden" name="path" id="branch" value="response.min.js" />
          </form> <!-- /.select-menu-item -->

      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.7.8/response.min.js"
                 data-name="0.7.8"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.7.8">0.7.8</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.7.7/response.min.js"
                 data-name="0.7.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.7.7">0.7.7</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.7.6/response.min.js"
                 data-name="0.7.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.7.6">0.7.6</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.7.5/response.min.js"
                 data-name="0.7.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.7.5">0.7.5</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.7.4/response.min.js"
                 data-name="0.7.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.7.4">0.7.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.7.3/response.min.js"
                 data-name="0.7.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.7.3">0.7.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.7.2/response.min.js"
                 data-name="0.7.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.7.2">0.7.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.7.1/response.min.js"
                 data-name="0.7.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.7.1">0.7.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.7.0/response.min.js"
                 data-name="0.7.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.7.0">0.7.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.6.1/response.min.js"
                 data-name="0.6.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.6.1">0.6.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.6.0/response.min.js"
                 data-name="0.6.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.6.0">0.6.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.5.3/response.min.js"
                 data-name="0.5.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.5.3">0.5.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.5.2/response.min.js"
                 data-name="0.5.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.5.2">0.5.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.5.1/response.min.js"
                 data-name="0.5.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.5.1">0.5.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.5.0/response.min.js"
                 data-name="0.5.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.5.0">0.5.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.4.2/response.min.js"
                 data-name="0.4.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.4.2">0.4.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.4.1/response.min.js"
                 data-name="0.4.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.4.1">0.4.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.4.0/response.min.js"
                 data-name="0.4.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.4.0">0.4.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.3.1/response.min.js"
                 data-name="0.3.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.3.1">0.3.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.3.0/response.min.js"
                 data-name="0.3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.3.0">0.3.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.2.9/response.min.js"
                 data-name="0.2.9"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.2.9">0.2.9</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.2.8/response.min.js"
                 data-name="0.2.8"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.2.8">0.2.8</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.2.7/response.min.js"
                 data-name="0.2.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.2.7">0.2.7</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.2.6/response.min.js"
                 data-name="0.2.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.2.6">0.2.6</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pandoraui/response.js/tree/0.2.5/response.min.js"
                 data-name="0.2.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.2.5">0.2.5</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/pandoraui/response.js" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">response.js</span></a></span></span><span class="separator"> / </span><strong class="final-path">response.min.js</strong> <span class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="response.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


  <div class="commit commit-loader file-history-tease js-deferred-content" data-url="/pandoraui/response.js/contributors/master/response.min.js">
    Fetching contributorsâ¦

    <div class="participation">
      <p class="loader-loading"><img alt="Octocat-spinner-32-eaf2f5" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" /></p>
      <p class="loader-error">Cannot retrieve contributors at this time</p>
    </div>
  </div>

<div id="files" class="bubble">
  <div class="file">
    <div class="meta">
      <div class="info">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
          <span>19 lines (19 sloc)</span>
        <span>9.18 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
            <a class="minibutton tooltipped leftwards"
               href="github-windows://openRepo/https://github.com/pandoraui/response.js?branch=master&amp;filepath=response.min.js" title="Open this file in GitHub for Windows">
                <span class="octicon octicon-device-desktop"></span> Open
            </a>
                <a class="minibutton"
                   href="/pandoraui/response.js/edit/master/response.min.js"
                   data-method="post" rel="nofollow" data-hotkey="e">Edit</a>
          <a href="/pandoraui/response.js/raw/master/response.min.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/pandoraui/response.js/blame/master/response.min.js" class="button minibutton ">Blame</a>
          <a href="/pandoraui/response.js/commits/master/response.min.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->
          <a class="minibutton danger empty-icon tooltipped downwards"
             href="/pandoraui/response.js/delete/master/response.min.js"
             title=""
             data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          Delete
        </a>
      </div><!-- /.actions -->

    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>

            </td>
            <td class="blob-line-code">
                    <div class="code-body highlight"><pre><div class='line' id='LC1'><span class="cm">/*! Response 0.7.8 | @link responsejs.com | @author ryanve | @license MIT */</span></div><div class='line' id='LC2'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">v</span><span class="p">){</span><span class="kd">var</span> <span class="nx">w</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">jQuery</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">Zepto</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">ender</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">elo</span><span class="p">;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">module</span><span class="o">&amp;&amp;</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">?</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">w</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="nx">q</span><span class="p">]</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">w</span><span class="p">)})(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;Response&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">a</span><span class="o">?</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">:</span><span class="nx">r</span><span class="p">);}</span><span class="kd">function</span> <span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">===</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">l</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">l</span><span class="p">}</span><span class="kd">function</span> <span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="p">[]}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;)</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">d</span><span class="o">++</span><span class="p">,</span></div><div class='line' id='LC3'><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;)</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="o">++</span><span class="p">],</span><span class="kc">null</span><span class="o">==</span><span class="nx">f</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="nx">g</span><span class="o">=!</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">],</span><span class="nx">g</span><span class="o">===!</span><span class="p">(</span><span class="nx">j</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="o">?</span><span class="k">typeof</span> <span class="nx">f</span><span class="o">===</span><span class="nx">b</span><span class="o">:</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span><span class="kd">function</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||!</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">c</span><span class="p">)}</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">ua</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span></div><div class='line' id='LC4'><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">?</span><span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="o">||</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">();</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="o">&gt;=</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&lt;=</span><span class="nx">c</span><span class="o">:</span><span class="nx">b</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">devicePixelRatio</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">y</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">?</span><span class="mi">2</span><span class="o">:</span><span class="nx">y</span><span class="p">(</span><span class="mf">1.5</span><span class="p">)</span><span class="o">?</span><span class="mf">1.5</span><span class="o">:</span><span class="nx">y</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;only all and (min--moz-device-pixel-ratio:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">matches</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!!</span><span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;-moz-&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)).</span><span class="nx">matches</span><span class="p">}</span><span class="kd">function</span> <span class="nx">da</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">W</span><span class="p">,</span></div><div class='line' id='LC5'><span class="s2">&quot;$1&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">va</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()})}</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;data-&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">W</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">wa</span><span class="p">,</span><span class="s2">&quot;$1-$2&quot;</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">:</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ea</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;string&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="s2">&quot;true&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="s2">&quot;false&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="s2">&quot;null&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">===+</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="nx">a</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="p">{},</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">===</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span></div><div class='line' id='LC6'><span class="nx">e</span><span class="o">?</span><span class="nx">ea</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="o">===</span><span class="nx">d</span><span class="o">||</span><span class="mi">2</span><span class="o">&gt;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="mi">1</span><span class="p">))</span><span class="nx">d</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(;</span><span class="nx">f</span><span class="o">--</span><span class="p">;)</span><span class="nx">f</span> <span class="k">in</span> <span class="k">this</span><span class="o">&amp;&amp;</span><span class="nx">K</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">arguments</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nb">Object</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">K</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataset</span><span class="o">&amp;&amp;</span><span class="nx">DOMStringMap</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">dataset</span><span class="p">;</span><span class="nx">j</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">attributes</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">).</span><span class="nx">match</span><span class="p">(</span><span class="nx">W</span><span class="p">)))</span><span class="nx">h</span><span class="p">[</span><span class="nx">da</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">])]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">});</span><span class="k">return</span> <span class="nx">h</span><span class="p">}</span><span class="kd">function</span> <span class="nx">fa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">x</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">))})}));</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="kd">function</span> <span class="nx">L</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">K</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC7'><span class="nx">xa</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">ga</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">fa</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ha</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;)(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="o">++</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">I</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">,</span><span class="s2">&quot;\\.&quot;</span><span class="p">))</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">join</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">()</span><span class="o">:</span><span class="p">{};</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="o">||</span><span class="mi">0</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">top</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="nx">b</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">left</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="nx">b</span><span class="p">,</span><span class="nx">bottom</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">bottom</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">right</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="nx">b</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">Z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span><span class="o">!!</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">c</span><span class="p">.</span><span class="nx">bottom</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">top</span><span class="o">&lt;=</span><span class="nx">z</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">c</span><span class="p">.</span><span class="nx">right</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">left</span><span class="o">&lt;=</span><span class="nx">A</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">ia</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">img</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span></div><div class='line' id='LC8'><span class="nx">input</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">source</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">embed</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">track</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">iframe</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">audio</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">video</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">script</span><span class="o">:</span><span class="mi">5</span><span class="p">}[</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()]</span><span class="o">||-</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="mi">4</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;src&quot;</span><span class="p">)</span><span class="o">?</span><span class="mi">5</span><span class="o">:-</span><span class="mi">5</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ja</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">(</span><span class="s2">&quot;store&quot;</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">;</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">ia</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;src&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">;</span><span class="kc">null</span><span class="o">==</span><span class="nx">d</span><span class="o">?</span><span class="nx">ga</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">L</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">)});</span><span class="k">return</span> <span class="nx">g</span><span class="p">}</span><span class="kd">function</span> <span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">L</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))},</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">aa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">B</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">g</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ka</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">||</span></div><div class='line' id='LC9'><span class="nx">q</span><span class="p">(</span><span class="s2">&quot;create @args&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">la</span><span class="p">).</span><span class="nx">configure</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">verge</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">breakpoints</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="s2">&quot;scroll&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="s2">&quot;resize&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||!</span><span class="mi">1</span><span class="p">,</span><span class="nx">N</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">reset</span><span class="p">();</span><span class="nx">j</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">$e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">decideValue</span><span class="p">().</span><span class="nx">updateDOM</span><span class="p">()}).</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">g</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(){</span><span class="nx">j</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">$e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">Z</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">$e</span><span class="p">,</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">updateDOM</span><span class="p">()})}</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">ca</span><span class="p">.</span><span class="nx">allLoaded</span><span class="p">,</span><span class="nx">k</span><span class="o">=!!</span><span class="nx">c</span><span class="p">.</span><span class="nx">lazy</span><span class="p">;</span><span class="nx">j</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">target</span><span class="p">().</span><span class="nx">$e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">prepareData</span><span class="p">(</span><span class="nx">a</span><span class="p">);(</span><span class="o">!</span><span class="nx">k</span><span class="o">||</span><span class="nx">Z</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">$e</span><span class="p">,</span><span class="nx">h</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">updateDOM</span><span class="p">()});</span><span class="nx">c</span><span class="p">.</span><span class="nx">dynamic</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">custom</span><span class="o">||</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">C</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">aa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">$e</span><span class="p">.</span><span class="nx">one</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">B</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span></div><div class='line' id='LC10'><span class="nx">b</span><span class="p">)}))}))});</span><span class="k">return</span> <span class="nx">g</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ma</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">dataset</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">dataset</span><span class="o">=</span><span class="nx">K</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">deletes</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">deletes</span><span class="o">=</span><span class="nx">fa</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">;</span><span class="nx">j</span><span class="p">([</span><span class="s2">&quot;inX&quot;</span><span class="p">,</span><span class="s2">&quot;inY&quot;</span><span class="p">,</span><span class="s2">&quot;inViewport&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){(</span><span class="nx">b</span><span class="o">||!</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="nx">u</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="o">===</span><span class="nx">g</span><span class="p">[</span><span class="nx">d</span><span class="p">](</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}))})})}</span><span class="k">return</span> <span class="nx">g</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Response was unable to run due to missing dependency.&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">Ga</span><span class="p">){}</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">O</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="s2">&quot;Response&quot;</span><span class="p">,</span><span class="nx">ya</span><span class="o">=</span><span class="nx">O</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">na</span><span class="o">=</span><span class="s2">&quot;init&quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nb">window</span><span class="p">,</span><span class="nx">oa</span><span class="o">=</span><span class="nb">document</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">oa</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span></div><div class='line' id='LC11'><span class="nx">N</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">domReady</span><span class="o">||</span><span class="nx">e</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">D</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">screen</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">xa</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">slice</span><span class="p">,</span><span class="nx">za</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">concat</span><span class="p">,</span><span class="nx">Aa</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">toString</span><span class="p">,</span><span class="nx">ua</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">,</span><span class="nx">S</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;[object Array]&quot;</span><span class="o">===</span><span class="nx">Aa</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">pa</span><span class="o">=</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">320</span><span class="p">,</span><span class="mi">481</span><span class="p">,</span><span class="mi">641</span><span class="p">,</span><span class="mi">961</span><span class="p">,</span><span class="mi">1025</span><span class="p">,</span><span class="mi">1281</span><span class="p">],</span><span class="nx">height</span><span class="o">:</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">481</span><span class="p">],</span><span class="nx">ratio</span><span class="o">:</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mf">1.5</span><span class="p">,</span><span class="mi">2</span><span class="p">]},</span><span class="nx">la</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="p">{},</span><span class="nx">t</span><span class="o">=</span><span class="p">{},</span><span class="nx">qa</span><span class="o">=</span><span class="p">{},</span><span class="nx">P</span><span class="o">=</span><span class="p">{</span><span class="nx">all</span><span class="o">:</span><span class="p">[]},</span><span class="nx">Ba</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">Q</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">R</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="nx">Q</span><span class="o">&gt;</span><span class="nx">R</span><span class="o">?</span><span class="nx">Q</span><span class="o">:</span><span class="nx">R</span><span class="p">,</span><span class="nx">Ca</span><span class="o">=</span><span class="nx">Q</span><span class="o">+</span><span class="nx">R</span><span class="o">-</span><span class="nx">C</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Q</span><span class="p">},</span><span class="nx">E</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">R</span><span class="p">},</span><span class="nx">Da</span><span class="o">=</span><span class="sr">/[^a-z0-9_\-\.]/gi</span><span class="p">,</span><span class="nx">X</span><span class="o">=</span><span class="sr">/^[\W\s]+|[\W\s]+$|/g</span><span class="p">,</span><span class="nx">wa</span><span class="o">=</span><span class="sr">/([a-z])([A-Z])/g</span><span class="p">,</span><span class="nx">va</span><span class="o">=</span><span class="sr">/-(.)/g</span><span class="p">,</span><span class="nx">W</span><span class="o">=</span><span class="sr">/^data-(.+)$/</span><span class="p">,</span><span class="nx">ba</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">create</span><span class="o">||</span></div><div class='line' id='LC12'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(){}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">new</span> <span class="nx">b</span><span class="p">},</span><span class="nx">M</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">r</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">ca</span><span class="o">=</span><span class="p">{</span><span class="nx">allLoaded</span><span class="o">:</span><span class="nx">M</span><span class="p">(</span><span class="s2">&quot;allLoaded&quot;</span><span class="p">),</span><span class="nx">crossover</span><span class="o">:</span><span class="nx">M</span><span class="p">(</span><span class="s2">&quot;crossover&quot;</span><span class="p">)},</span><span class="nx">V</span><span class="o">=</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">matchMedia</span><span class="o">||</span><span class="nx">k</span><span class="p">.</span><span class="nx">msMatchMedia</span><span class="p">)</span><span class="o">||</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{}},</span><span class="nx">A</span><span class="p">,</span><span class="nx">ra</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="nx">s</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">clientWidth</span><span class="p">;</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">ra</span><span class="p">.</span><span class="nx">innerWidth</span><span class="p">;</span><span class="nx">A</span><span class="o">=</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="o">&lt;</span><span class="nx">F</span><span class="o">&amp;&amp;!</span><span class="mi">0</span><span class="o">===</span><span class="nx">p</span><span class="p">(</span><span class="s2">&quot;(min-width:&quot;</span><span class="o">+</span><span class="nx">F</span><span class="o">+</span><span class="s2">&quot;px)&quot;</span><span class="p">).</span><span class="nx">matches</span><span class="o">?</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">ra</span><span class="p">.</span><span class="nx">innerWidth</span><span class="p">}</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">m</span><span class="p">.</span><span class="nx">clientWidth</span><span class="p">};</span><span class="kd">var</span> <span class="nx">z</span><span class="p">,</span><span class="nx">sa</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="nx">s</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">clientHeight</span><span class="p">;</span><span class="nx">F</span><span class="o">=</span><span class="nx">sa</span><span class="p">.</span><span class="nx">innerHeight</span><span class="p">;</span><span class="nx">z</span><span class="o">=</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="o">&lt;</span><span class="nx">F</span><span class="o">&amp;&amp;!</span><span class="mi">0</span><span class="o">===</span><span class="nx">p</span><span class="p">(</span><span class="s2">&quot;(min-height:&quot;</span><span class="o">+</span><span class="nx">F</span><span class="o">+</span><span class="s2">&quot;px)&quot;</span><span class="p">).</span><span class="nx">matches</span><span class="o">?</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">sa</span><span class="p">.</span><span class="nx">innerHeight</span><span class="p">}</span><span class="o">:</span></div><div class='line' id='LC13'><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">m</span><span class="p">.</span><span class="nx">clientHeight</span><span class="p">};</span><span class="nx">p</span><span class="o">=</span><span class="nx">H</span><span class="p">(</span><span class="nx">A</span><span class="p">);</span><span class="nx">s</span><span class="o">=</span><span class="nx">H</span><span class="p">(</span><span class="nx">z</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">band</span><span class="o">=</span><span class="nx">H</span><span class="p">(</span><span class="nx">D</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">wave</span><span class="o">=</span><span class="nx">H</span><span class="p">(</span><span class="nx">E</span><span class="p">);</span><span class="kd">var</span> <span class="nx">Ea</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="nx">Da</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="nx">ta</span><span class="o">=</span><span class="nx">ca</span><span class="p">.</span><span class="nx">crossover</span><span class="p">,</span><span class="nx">Fa</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">;</span><span class="nx">la</span><span class="o">=</span><span class="p">{</span><span class="nx">$e</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">mode</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">breakpoints</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">prefix</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">prop</span><span class="o">:</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="nx">keys</span><span class="o">:</span><span class="p">[],</span><span class="nx">dynamic</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">custom</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">values</span><span class="o">:</span><span class="p">[],</span><span class="nx">fn</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">verge</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">newValue</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">currValue</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">aka</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">lazy</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">i</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">uid</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">reset</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">breakpoints</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="o">!</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">--</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">fn</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">ta</span><span class="p">).</span><span class="nx">trigger</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="o">+</span><span class="nx">ta</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span></div><div class='line' id='LC14'><span class="nx">configure</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">U</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">uid</span><span class="o">=</span><span class="nx">Ba</span><span class="o">++</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">verge</span><span class="o">=</span><span class="nb">isFinite</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">verge</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">verge</span><span class="o">:</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="mi">500</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">fn</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="nx">q</span><span class="p">(</span><span class="s2">&quot;create @fn&quot;</span><span class="p">);</span><span class="s2">&quot;boolean&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">dynamic</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">dynamic</span><span class="o">=</span><span class="s2">&quot;device&quot;</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">6</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">custom</span><span class="o">=</span><span class="nx">qa</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">prefix</span><span class="o">?</span><span class="nx">u</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">prefix</span><span class="p">),</span><span class="nx">Ea</span><span class="p">))</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;min-&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="p">];</span><span class="nx">a</span><span class="o">=</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">prefix</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">breakpoints</span><span class="p">;</span><span class="nx">S</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">j</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;invalid breakpoint&quot;</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">-</span><span class="nx">b</span><span class="p">})</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="nx">q</span><span class="p">(</span><span class="s2">&quot;create @breakpoints&quot;</span><span class="p">))</span><span class="o">:</span></div><div class='line' id='LC15'><span class="nx">c</span><span class="o">=</span><span class="nx">pa</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="nx">pa</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">).</span><span class="nx">pop</span><span class="p">()]</span><span class="o">||</span><span class="nx">q</span><span class="p">(</span><span class="s2">&quot;create @prop&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">breakpoints</span><span class="o">=</span><span class="nx">d</span><span class="o">?</span><span class="nx">u</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&lt;=</span><span class="nx">C</span><span class="p">})</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">keys</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">breakpoints</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">prefix</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">aka</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">--</span><span class="p">;)</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">breakpoints</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]));</span><span class="k">this</span><span class="p">.</span><span class="nx">aka</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">keys</span><span class="o">=</span><span class="nx">za</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">keys</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="nx">P</span><span class="p">.</span><span class="nx">all</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">all</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">P</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">uid</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">keys</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">target</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">$e</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">ha</span><span class="p">(</span><span class="nx">P</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">uid</span><span class="p">]));</span><span class="nx">ja</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$e</span><span class="p">,</span><span class="nx">na</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">keys</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">na</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">decideValue</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">breakpoints</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">--</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">fn</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">])</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC16'><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">values</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">newValue</span><span class="o">=</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">values</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">prepareData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">$e</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">mode</span><span class="o">=</span><span class="nx">ia</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">values</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">keys</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">aka</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">aka</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">--</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">values</span><span class="o">=</span><span class="nx">U</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">values</span><span class="p">,</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">aka</span><span class="p">[</span><span class="nx">a</span><span class="p">]));</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">decideValue</span><span class="p">()},</span><span class="nx">updateDOM</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">currValue</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">newValue</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">currValue</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">newValue</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">mode</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">$e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;src&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">newValue</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">newValue</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">$e</span><span class="p">.</span><span class="nx">empty</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">$e</span><span class="p">.</span><span class="nx">empty</span><span class="p">()</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$e</span><span class="p">.</span><span class="nx">html</span><span class="o">?</span></div><div class='line' id='LC17'><span class="k">this</span><span class="p">.</span><span class="nx">$e</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">newValue</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$e</span><span class="p">.</span><span class="nx">empty</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">$e</span><span class="p">.</span><span class="nx">empty</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">$e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">innerHTML</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">newValue</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">}};</span><span class="nx">t</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">p</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">s</span><span class="p">;</span><span class="nx">t</span><span class="p">[</span><span class="s2">&quot;device-width&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">band</span><span class="p">;</span><span class="nx">t</span><span class="p">[</span><span class="s2">&quot;device-height&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">wave</span><span class="p">;</span><span class="nx">t</span><span class="p">[</span><span class="s2">&quot;device-pixel-ratio&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">y</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">deviceMin</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Ca</span><span class="p">},</span><span class="nx">deviceMax</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">C</span><span class="p">},</span><span class="nx">noConflict</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">O</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">===</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">O</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="nx">ya</span><span class="p">);</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">O</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">return</span> <span class="nx">g</span><span class="p">},</span><span class="nx">chain</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="nx">ma</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">bridge</span><span class="o">:</span><span class="nx">ma</span><span class="p">,</span><span class="nx">create</span><span class="o">:</span><span class="nx">ka</span><span class="p">,</span><span class="nx">addTest</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC18'><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">qa</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="nx">g</span><span class="p">},</span><span class="nx">datatize</span><span class="o">:</span><span class="nx">I</span><span class="p">,</span><span class="nx">camelize</span><span class="o">:</span><span class="nx">da</span><span class="p">,</span><span class="nx">render</span><span class="o">:</span><span class="nx">ea</span><span class="p">,</span><span class="nx">store</span><span class="o">:</span><span class="nx">ja</span><span class="p">,</span><span class="nx">access</span><span class="o">:</span><span class="nx">$</span><span class="p">,</span><span class="nx">target</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">(</span><span class="nx">ha</span><span class="p">(</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">)))},</span><span class="nx">object</span><span class="o">:</span><span class="nx">ba</span><span class="p">,</span><span class="nx">crossover</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">ca</span><span class="p">.</span><span class="nx">crossover</span><span class="p">;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">);</span><span class="nx">B</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">g</span><span class="p">},</span><span class="nx">action</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">N</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">aa</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="k">return</span> <span class="nx">g</span><span class="p">},</span><span class="nx">resize</span><span class="o">:</span><span class="nx">aa</span><span class="p">,</span><span class="nx">ready</span><span class="o">:</span><span class="nx">N</span><span class="p">,</span><span class="nx">affix</span><span class="o">:</span><span class="nx">T</span><span class="p">,</span><span class="nx">sift</span><span class="o">:</span><span class="nx">u</span><span class="p">,</span><span class="nx">dpr</span><span class="o">:</span><span class="nx">y</span><span class="p">,</span><span class="nx">deletes</span><span class="o">:</span><span class="nx">ga</span><span class="p">,</span><span class="nx">scrollX</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">window</span><span class="p">.</span><span class="nx">pageXOffset</span><span class="o">||</span><span class="nx">m</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">},</span><span class="nx">scrollY</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">window</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="o">||</span><span class="nx">m</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">},</span><span class="nx">deviceW</span><span class="o">:</span><span class="nx">D</span><span class="p">,</span><span class="nx">deviceH</span><span class="o">:</span><span class="nx">E</span><span class="p">,</span><span class="nx">device</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">inX</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC19'><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span><span class="o">!!</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">c</span><span class="p">.</span><span class="nx">right</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">left</span><span class="o">&lt;=</span><span class="nx">A</span><span class="p">()},</span><span class="nx">inY</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span><span class="o">!!</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">c</span><span class="p">.</span><span class="nx">bottom</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">top</span><span class="o">&lt;=</span><span class="nx">z</span><span class="p">()},</span><span class="nx">route</span><span class="o">:</span><span class="nx">x</span><span class="p">,</span><span class="nx">merge</span><span class="o">:</span><span class="nx">U</span><span class="p">,</span><span class="nx">media</span><span class="o">:</span><span class="nx">V</span><span class="p">,</span><span class="nx">wave</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">band</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">map</span><span class="o">:</span><span class="nx">w</span><span class="p">,</span><span class="nx">each</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">inViewport</span><span class="o">:</span><span class="nx">Z</span><span class="p">,</span><span class="nx">dataset</span><span class="o">:</span><span class="nx">L</span><span class="p">,</span><span class="nx">viewportH</span><span class="o">:</span><span class="nx">z</span><span class="p">,</span><span class="nx">viewportW</span><span class="o">:</span><span class="nx">A</span><span class="p">};</span><span class="nx">N</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">oa</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span><span class="s2">&quot;responsejs&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">((</span><span class="nx">a</span><span class="o">=!!</span><span class="nx">k</span><span class="p">.</span><span class="nx">JSON</span><span class="o">&amp;&amp;</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">parseJSON</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">parseJSON</span><span class="p">(</span><span class="nx">b</span><span class="p">)),</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">create</span><span class="o">&amp;&amp;</span><span class="nx">ka</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">create</span><span class="p">));</span><span class="nx">m</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(^|\s)(no-)?responsejs(\s|$)/</span><span class="p">,</span><span class="s2">&quot;$1$3&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; responsejs &quot;</span><span class="p">});</span><span class="k">return</span> <span class="nx">g</span><span class="p">});</span></div></pre></div>
            </td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2013 <span title="0.10318s from github-fe127-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/pandoraui/response.js/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

